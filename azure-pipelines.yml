# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: Hosted Ubuntu 1604
  demands:
  - npm
  - java

steps:
- powershell: |
   Write-host "Git tags: " | git tag -l
   
   $git_version = (git describe --always --tags --long --match v?.?.? | Select-String -pattern '(?<major>[0-9]+)\.(?<minor>[0-9]+).(?<patch>[0-9]+)-(?<commitCount>[0-9]+)-(?<hash>[a-z0-9]+)').Matches[0].Groups
   
   IF([string]::IsNullOrEmpty($git_version)) 
   {
   Write-Host "There is no spoon, you got no tags pushed, if this is a new project push a base tag."
   }
   
   $git_describe = $git_version[0].Value
   
   $majorVersion = $git_version['major']
   $minorVersion = $git_version['minor']
   $patchVersion = $git_version['patch']
   $commitCount= $git_version['commitCount']
   
   $version = [string]::Join('.', @(
    $majorVersion,
    $minorVersion,
    $patchVersion
   ))
   
   Write-Host "Version is: $version-$commitCount"
   
   $env:CurrentVersion = "$version-$commitCount";
   
   Write-Host "##vso[build.updatebuildnumber]$version-$commitCount"
   Write-Host "##vso[task.setvariable variable=CurrentVersion]$version-$commitCount"
   Write-Host "Our version is: $($env:CurrentVersion)";
   
  displayName: 'PowerShell Script'

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'SonarCloud - demo'
    organization: 'jonizen-github'
    projectKey: 'sonar-cloud-core-2-demo'
    projectName: 'SonarCloud .Net Core 2 React Demo'
    projectVersion: '$(CurrentVersion)'
    extraProperties: |
     # Additional properties that will be passed to the scanner, 
     # Put one key=value per line, example:
     # sonar.exclusions=sonar.exclusions=node_modules/**

- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: SonarCloudDemo/ClientApp
    verbose: false

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Parameters.RestoreBuildProjects)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'
